{"version":3,"sources":["providers/AccountContext.jsx","components/Authorize.jsx","providers/AppContext.jsx","containers/loginContainer.jsx","localization/translate.jsx","components/login/Login.jsx","components/login/loginUi.jsx","components/login/index.jsx","providers/CommonDataContext.jsx","validator/PasswordValidator.js","containers/signupContainer.jsx","utils/Rules.js","svg/tickIcon.svg","components/signup/Signup.js","components/signup/SignupUI.js","components/signup/index.js","Main.jsx","localization/constants.js","localization/messages/en-US.js","localization/messages/fr-CA.js","localization/messages/index.js","localization/languageProvider.jsx","app.js","index.js"],"names":["AccountContext","React","createContext","AccountProvider","props","locale","useState","isAuthenticated","setIsAuth","webAuth","auth0","WebAuth","domain","process","clientID","responseType","redirectUri","Provider","value","otpStart","email","Promise","resolve","reject","variables","connection","send","passwordlessStart","err","res","console","log","otpLogin","otp","passwordlessLogin","verificationCode","window","origin","location","loginWithPassword","username","password","login","realm","authResult","SignupWithPassword","userMetadata","lang","signup","AuthenticateUser","authToken","localStorage","setItem","storeUserData","data","JSON","stringify","getSocialLogin","name","authorize","children","Authorize","useContext","useEffect","hash","parseHash","state","config","nonce","extraParams","clear","idTokenPayload","picture","id","sub","idToken","parseAuthToken","to","AppContext","AppProvider","whichPage","setWhichPage","LoginContainer","otpAvailable","isSubmitting","LoginForm","setLoginForm","isEmailError","databaseError","errorCode","LoginError","setLoginError","switchLogin","setToggle","Continue","setContinue","socialBtn","a","validateEmail","test","String","toLowerCase","onSubmit","e","preventDefault","description","code","original","message","getOtp","child","Children","only","cloneElement","onChange","target","onBlur","onToggle","onPressContinue","translate","values","Login","trackClickEvent","navElement","utag_data","utag","utagdata","link","className","style","color","flex","display","border","backgroundColor","borderRadius","type","placeholder","flexDirection","onClick","disabled","cursor","LoginUI","alt","src","view","tm_global_pagename","CommonDataContext","CommonDataProvider","connections","setConn","axios","get","auth0Domain","filteredData","slice","jsonData","parse","DB_ARRAY","strategies","filter","item","getCommonData","charsets","require","validatePassword","rules","PasswordPolicyState","setPasswordPolicyState","setIsValid","length","copyObj","alphaNumericPolicy","PasswordPolicy","contains","expressions","upperCase","lowerCase","numbers","lengthPolicy","passwordPolicy","password_complexity_options","min_length","minLength","specialCharacters","identicalChars","max","Non_empty_Password_Required","check","Length_Check","Lower_case_Upper_Case_Numbers","SignupContainer","isValid","passwordRules","setPasswordRules","confirmPassword","SignupForm","setSignupForm","No_more_than_2_identical_characters_in_a_row","Special_characters","SignupError","setSignupError","Rules","count","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","fill","SvgTickIcon","_ref","svgRef","title","titleId","width","height","viewBox","ref","ForwardRef","Signup","showPassword","setShowPassword","displayRules","setDisplayRules","ruleMap","displayablerule","getKeys","push","marginTop","onFocus","map","index","fontWeight","SignupUI","Main","LOCALES","en","Welcome_back_to","emailAddress","signIn","choose_your_signIn_method_continue","Enter_your_email_address_so_we_can_find_your_account","or","signIn_with_password","one_time_passcode","Sign_in_with_a_onetime_passcode","continue","access_denied","too_many_attempts","Welcome_to_dashboard","invalid_request","unauthorized_client","unsupported_credential_type","blocked_user","password_leaked","or_Signin_with","Do_not_have_an_account","invalid_user_password","invalid_captcha","invalid_recaptcha","Enter_your_email_address_set_password_and_well_get_your_account_created","Already_have_a_account","confirm_password","Request_one_time_passcode","ACT0104","ACT0105","ResendCode","fr","unsupported_credential_typ","messages","LanguageProvider","textComponent","Fragment","App","pageConfig","parsedHash","URLSearchParams","substr","query","useLocation","search","useRef","culture","getItem","current","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53ce069a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport auth0 from \"auth0-js\";\n\nconst AccountContext = React.createContext({});\n\nconst AccountProvider = (props) => {\n    const { locale } = props;\n    const [isAuthenticated, setIsAuth] = useState(false);\n\n    const AuthenticateUser = (authToken) => {\n        localStorage.setItem(\"auth_token\", authToken);\n        setIsAuth(true);\n    };\n\n    const storeUserData = (data) => {\n        localStorage.setItem(\"userData\", JSON.stringify(data));\n    };\n    // const webAuth = new auth0.WebAuth({\n    //     domain: props.config.auth0Domain,\n    //     clientID: props.config.clientID,\n    //     redirectUri: props.config.callbackURL,\n    //     responseType: props.config.extraParams.response_type,\n    //     scope: props.config.extraParams.scope,\n    //     state: props.config.extraParams.state,\n    //     nonce: props.config.extraParams.nonce,\n    //     _csrf: props.config.extraParams._csrf,\n    //     audience: props.config.extraParams.audience,\n    //     overrides: { __tenant: props.config.auth0Tenant },\n    // });\n    const webAuth = new auth0.WebAuth({\n        domain: process.env.REACT_APP_AUTH0_DOMAIN,\n        clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        responseType: \"token id_token\",\n        redirectUri: \"http://localhost:4040/authorize\",\n    });\n    const getSocialLogin = (name) => {\n        return new Promise((resolve, reject) => {\n            webAuth.authorize(\n                {\n                    connection: name,\n                },\n                (err, res) => {\n                    if (err) {\n                        console.log(err);\n                        reject(err);\n                    } else {\n                        resolve(res);\n                    }\n                }\n            );\n        });\n    };\n\n    const SignupWithPassword = (email, password) => {\n        const userMetadata = {\n            lang: locale,\n        };\n        return new Promise((resolve, reject) => {\n            const variables = {\n                connection: \"Test-CustomDB\",\n                email,\n                password,\n                userMetadata,\n            };\n            webAuth.signup(variables, (err, authResult) => {\n                if (err) {\n                    console.log(err);\n                    reject(err);\n                    return;\n                }\n                if (authResult) {\n                    window.origin = window.location.origin;\n                    resolve(authResult);\n                }\n            });\n        });\n    };\n\n    const otpStart = (email) => {\n        return new Promise((resolve, reject) => {\n            const variables = { email, connection: \"email\", send: \"code\" };\n            webAuth.passwordlessStart(variables, (err, res) => {\n                if (err) {\n                    console.log(err);\n                    reject(err);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    };\n\n    const otpLogin = (email, otp) => {\n        return new Promise((resolve, reject) => {\n            webAuth.passwordlessLogin(\n                { email, connection: \"email\", verificationCode: otp },\n                (err, res) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        window.origin = window.location.origin;\n                        resolve(res);\n                    }\n                }\n            );\n        });\n    };\n\n    const loginWithPassword = (username, password) => {\n        return new Promise((resolve, reject) => {\n            webAuth.login(\n                {\n                    realm: \"Test-CustomDB\",\n                    username,\n                    password,\n                },\n                (err, authResult) => {\n                    if (err) {\n                        console.log(err);\n                        reject(err);\n                        return;\n                    }\n                    if (authResult) {\n                        window.origin = window.location.origin;\n                        resolve(authResult);\n                    }\n                }\n            );\n        });\n    };\n\n    return (\n        <AccountContext.Provider\n            value={{\n                webAuth,\n                otpStart,\n                otpLogin,\n                loginWithPassword,\n                SignupWithPassword,\n                AuthenticateUser,\n                storeUserData,\n                isAuthenticated,\n                getSocialLogin,\n            }}\n        >\n            {props.children}\n        </AccountContext.Provider>\n    );\n};\n\nexport { AccountProvider, AccountContext };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AccountContext } from \"../providers/AccountContext\";\n\nconst Authorize = (props) => {\n    const { isAuthenticated, storeUserData, AuthenticateUser, webAuth } =\n        useContext(AccountContext);\n\n    const parseAuthToken = () => {\n        if (window.location.hash) {\n            webAuth.parseHash(\n                {\n                    hash: window.location.hash,\n                    state: props?.config?.state,\n                    nonce: props?.config?.extraParams?.nonce,\n                },\n                (err, res) => {\n                    if (err) {\n                        console.log(err);\n                        localStorage.clear();\n                        return;\n                    }\n\n                    const {\n                        email,\n                        name,\n                        picture,\n                        sub: id,\n                    } = res.idTokenPayload;\n                    storeUserData({ email, name, picture, id });\n                    AuthenticateUser(res.idToken);\n                }\n            );\n        }\n    };\n    useEffect(() => {\n        parseAuthToken();\n    }, []);\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    return <div>Loading....</div>;\n};\n\nexport default Authorize;\n","import React, { useState } from \"react\";\n\nconst AppContext = React.createContext({});\n\nconst AppProvider = (props) => {\n  const [whichPage, setWhichPage] = useState(\"login-page\");\n  return (\n    <AppContext.Provider\n      value={{\n        whichPage,\n        setWhichPage,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider, AppContext };\n","import React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nexport default function LoginContainer(props) {\n    const { loginWithPassword, otpLogin, otpStart, getSocialLogin } =\n        useContext(AccountContext);\n\n    const [LoginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        otp: \"\",\n        otpAvailable: false,\n        isSubmitting: false,\n    });\n    const [LoginError, setLoginError] = useState({\n        email: \"\",\n        isEmailError: \"\",\n        databaseError: \"\",\n        errorCode: \"\",\n    });\n    const [switchLogin, setToggle] = useState(false);\n\n    const [Continue, setContinue] = useState(false);\n\n    const onToggle = () => {\n        setToggle(!switchLogin);\n        setLoginError({\n            ...LoginError,\n            email: \"\",\n            databaseError: \"\",\n            errorCode: \"\",\n        });\n    };\n    const onPressContinue = () => {\n        setContinue(true);\n    };\n    const socialBtn = async (name) => {\n        try {\n            await getSocialLogin(name);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const validateEmail = (email) => {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    const onBlur = (e) => {\n        switch (e.target.name) {\n            case \"email\":\n                if (!e.target.value) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is required\",\n                    });\n                } else if (e.target.value && !validateEmail(e.target.value)) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is not valid\",\n                    });\n                } else {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: false,\n                        [e.target.name]: \"\",\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onChange = (e) => {\n        setLoginForm({\n            ...LoginForm,\n            [e.target.name]: e.target.value,\n        });\n        onBlur(e);\n    };\n\n    const onSubmit = async (e) => {\n        setLoginForm({\n            ...LoginForm,\n            isSubmitting: true,\n        });\n\n        e.preventDefault();\n        if (!switchLogin) {\n            try {\n                await loginWithPassword(LoginForm.email, LoginForm.password);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: \"\",\n                });\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n            } catch (err) {\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err?.description,\n                    errorCode:\n                        err?.code === null ? err.original.message : err?.code,\n                });\n            }\n        } else {\n            try {\n                if (LoginForm.otpAvailable) {\n                    await otpLogin(LoginForm.email, LoginForm.otp);\n                    setLoginForm({\n                        ...LoginForm,\n                        isSubmitting: false,\n                    });\n                } else {\n                    await otpStart(LoginForm.email);\n                    setLoginForm({\n                        ...LoginForm,\n                        isSubmitting: false,\n                    });\n                    setLoginForm({\n                        ...LoginForm,\n                        otpAvailable: true,\n                    });\n                }\n            } catch (err) {\n                setLoginForm({\n                    ...LoginForm,\n                    isSubmitting: false,\n                });\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err?.description,\n                    errorCode: err?.code ?? err?.message,\n                });\n            }\n        }\n    };\n    const getOtp = async (e) => {\n        try {\n            e.preventDefault();\n            await otpStart(LoginForm.email);\n        } catch (err) {\n            console.log(err);\n            setLoginError({\n                ...LoginError,\n                databaseError: err?.description,\n                errorCode: err?.code ?? err?.message,\n            });\n        }\n    };\n\n    const child = React.Children.only(props.children);\n    return React.cloneElement(child, {\n        ...props,\n        onChange,\n        onToggle,\n        switchLogin,\n        onSubmit,\n        LoginForm,\n        LoginError,\n        Continue,\n        validateEmail,\n        onPressContinue,\n        getOtp,\n        socialBtn,\n    });\n}\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst translate = (id, value = {}) => (\n    <FormattedMessage id={id} values={{ ...value }} />\n);\n\nexport default translate;\n","import React from \"react\";\nimport \"./style.css\";\nimport translate from \"../../localization/translate\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { MdLockOutline } from \"react-icons/md\";\n// import SocialButtons from \"./socialLogin\";\n\nconst Login = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        onToggle,\n        validateEmail,\n        getOtp,\n        // socialBtn,\n    } = props;\n    const trackClickEvent = async (navElement) => {\n        let utag_data = window.utag_data;\n        let utag = window.utag;\n        let utagdata = { ...utag_data };\n        utagdata[\"tm_global_tealium_calltype\"] = \"manual\";\n        utagdata[\"tm_global_navigation_element\"] = navElement;\n        utagdata[\"tm_global_navigation_element_click\"] = \"true\";\n        utag.link(utagdata);\n    };\n    return (\n        <div className=\"LoginWrapperContainer\">\n            <form className=\"LoginInputWrapper\">\n                <>\n                    <div className=\"LoginInputContainer\">\n                        {LoginForm.email !== \"\" ? (\n                            <div\n                                className=\"LoginInputLabel\"\n                                style={{\n                                    color: validateEmail(LoginForm.email)\n                                        ? \"green\"\n                                        : \"red\",\n                                }}\n                            >\n                                {translate(\"emailAddress\")}\n                            </div>\n                        ) : null}\n                        <div\n                            style={{\n                                flex: 1,\n                                display: \"flex\",\n                                border:\n                                    LoginError.isEmailError === true\n                                        ? \"2px solid red\"\n                                        : LoginError.isEmailError === false\n                                        ? \"2px solid green\"\n                                        : \"\",\n                                backgroundColor: \"#ffff\",\n                                borderRadius: \"1rem\",\n                            }}\n                        >\n                            <AiOutlineMail className=\"LoginInputLogo\" />\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={LoginForm.email}\n                                placeholder=\"Email\"\n                                className=\"LoginInput\"\n                                onChange={onChange}\n                            />\n                        </div>\n                    </div>\n                </>\n\n                {LoginError.email && (\n                    <div className=\"Error\">{LoginError.email}</div>\n                )}\n                {!switchLogin && (\n                    <>\n                        <div className=\"LoginInputContainer\">\n                            {LoginForm.password !== \"\" ? (\n                                <div className=\"LoginInputLabel\">\n                                    {translate(\"password\")}\n                                </div>\n                            ) : null}\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    borderRadius: \"1rem\",\n                                    backgroundColor: \"#ffff\",\n                                }}\n                            >\n                                <MdLockOutline className=\"LoginInputLogo\" />\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"LoginInput\"\n                                    onChange={onChange}\n                                />\n                            </div>\n                        </div>\n                    </>\n                )}\n                {switchLogin && LoginForm.otpAvailable && (\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                        <div className=\"LoginInputContainer\">\n                            <div className=\"LoginInputLabel\">\n                                {translate(\"one_time_passcode\")}\n                            </div>\n                            <input\n                                id=\"otp\"\n                                name=\"otp\"\n                                className=\"LoginInput\"\n                                onChange={onChange}\n                            />\n                        </div>\n                        <div\n                            className=\"LoginOtpResendContainer\"\n                            onClick={getOtp}\n                        >\n                            <button className=\"LoginResendBtn\">\n                                {translate(\"ResendCode\")}\n                            </button>\n                        </div>\n                    </div>\n                )}\n                <button\n                    className=\"RequestOtp\"\n                    onClick={(e) =>\n                        onSubmit(e) && trackClickEvent(\"continue-auth0\")\n                    }\n                    disabled={\n                        !validateEmail(LoginForm.email) ||\n                        LoginForm.isSubmitting\n                    }\n                    style={{\n                        backgroundColor:\n                            !validateEmail(LoginForm.email) ||\n                            LoginForm.isSubmitting\n                                ? \"gray\"\n                                : \"\",\n                        cursor: LoginForm.isSubmitting ? \"progress\" : \"pointer\",\n                    }}\n                >\n                    {!switchLogin ? (\n                        <div>{translate(\"signIn\")}</div>\n                    ) : LoginForm.otpAvailable ? (\n                        <div>{translate(\"signIn\")}</div>\n                    ) : (\n                        <div>{translate(\"Request_one_time_passcode\")}</div>\n                    )}\n                    {/* <div>{translate(\"signIn\")}</div> */}\n                </button>\n            </form>\n            {LoginError.errorCode && (\n                <div className=\"Error\">{translate(LoginError.errorCode)}</div>\n            )}\n\n            <div className=\"SwitchContainer\">\n                <div className=\"Switch\">{translate(\"or\")}</div>\n\n                {!switchLogin && (\n                    <button className=\"SwitchBtn\" onClick={onToggle}>\n                        <div>\n                            {translate(\"Sign_in_with_a_onetime_passcode\")}\n                        </div>\n                    </button>\n                )}\n                {switchLogin && (\n                    <button className=\"SwitchBtn\" onClick={onToggle}>\n                        <div>{translate(\"signIn_with_password\")}</div>\n                    </button>\n                )}\n                {/* {!switchLogin && (\n                    <button className=\"SwitchBtn\" onClick={getOtp}>\n                        <div>\n                            {translate(\"Sign_in_with_a_onetime_passcode\")}\n                        </div>\n                    </button>\n                )}\n                {switchLogin && (\n                    <button className=\"SwitchBtn\" onClick={onToggle}>\n                        <div>{translate(\"signIn_with_password\")}</div>\n                    </button>\n                )} */}\n            </div>\n            {/* <SocialButtons socialBtn={socialBtn} /> */}\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../providers/AppContext\";\nimport \"./style.css\";\nimport Login from \"./Login\";\nimport translate from \"../../localization/translate\";\n\nconst LoginUI = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onToggle,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        validateEmail,\n        Continue,\n        onPressContinue,\n        getOtp,\n        socialBtn,\n    } = props;\n    const { setWhichPage } = useContext(AppContext);\n\n    return (\n        <>\n            <div className=\"LoginContainer\">\n                <div className=\"LoginLeftWrapper\">\n                    <div className=\"LoginWelcomeContainer\">\n                        <img\n                            alt=\"McAfeeLogo\"\n                            className=\"LoginPageLogo\"\n                            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\n                        />\n                        <div className=\"LoginIntro\">\n                            {translate(\"Welcome_back_to\")} McAfee !\n                        </div>\n                        <div className=\"LoginIntroSubHeading\">\n                            {translate(\"choose_your_signIn_method_continue\")}\n                        </div>\n                        <div className=\"LoginBottomHeading\">\n                            <div>{translate(\"Do_not_have_an_account\")}</div>\n                            <div\n                                className=\"Login-page-link\"\n                                onClick={() => {\n                                    setWhichPage(\"signup-page\");\n                                }}\n                            >\n                                Create one now\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"LoginRightWrapper\">\n                    <Login\n                        LoginError={LoginError}\n                        onChange={onChange}\n                        switchLogin={switchLogin}\n                        onSubmit={onSubmit}\n                        LoginForm={LoginForm}\n                        onToggle={onToggle}\n                        onPressContinue={onPressContinue}\n                        Continue={Continue}\n                        getOtp={getOtp}\n                        validateEmail={validateEmail}\n                        socialBtn={socialBtn}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default LoginUI;\n","import React, { useEffect } from \"react\";\nimport LoginContainer from \"../../containers/loginContainer\";\nimport LoginUI from \"./loginUi\";\n\nconst Login = (props) => {\n  useEffect(() => {\n    let utag_data = window.utag_data;\n    let utag = window.utag;\n    utag.view({ ...utag_data, tm_global_pagename: \"Login-React\" });\n  }, []);\n  return (\n    <LoginContainer {...props}>\n      <LoginUI />\n    </LoginContainer>\n  );\n};\nexport default Login;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CommonDataContext = React.createContext({});\n\nconst CommonDataProvider = (props) => {\n  const [connections, setConn] = useState([]);\n  useEffect(() => {\n    const getCommonData = async () => {\n      const res = await axios.get(\n        `https://${props.config.auth0Domain}/client/${props.config.clientID}.js`\n      );\n      const data = res.data;\n      if (typeof data === \"string\") {\n        const filteredData = data.slice(16, -2);\n        const jsonData = JSON.parse(filteredData);\n        const DB_ARRAY = jsonData?.strategies[0]?.connections.filter(\n          (item) => item.name === \"Test-CustomDB\"\n        );\n        console.log(\"DB ARRAY RECIVED\", DB_ARRAY);\n        setConn(DB_ARRAY);\n      }\n    };\n    getCommonData();\n  }, []);\n  return (\n    <CommonDataContext.Provider value={{ connections }}>\n      {props.children}\n    </CommonDataContext.Provider>\n  );\n};\n\nexport { CommonDataProvider, CommonDataContext };\n","import PasswordPolicy from \"password-sheriff/lib/policy\";\nconst charsets = require(\"password-sheriff\").charsets;\n\nexport const AlphaNumericCheck = () => {\n  const alphaNumericPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.upperCase, charsets.lowerCase, charsets.numbers],\n    },\n  });\n  return alphaNumericPolicy;\n};\n\nexport const PasswordLengthWise = (length) => {\n  const lengthPolicy = new PasswordPolicy({\n    length: { minLength: length },\n  });\n  return lengthPolicy;\n};\n\nexport const SpecialCharacterPolicy = () => {\n  const specialCharacterPolicy = new PasswordPolicy({\n    contains: {\n      expressions: [charsets.specialCharacters],\n    },\n  });\n  return specialCharacterPolicy;\n};\n\nexport const IdenticalCharacters = () => {\n  var identicalCharsPolicy = new PasswordPolicy({\n    identicalChars: {\n      max: 2,\n    },\n  });\n  return identicalCharsPolicy;\n};\n\nexport const validatePassword = (\n  rules,\n  value,\n  PasswordPolicyState,\n  setPasswordPolicyState,\n  setIsValid\n) => {\n  const copyObj = {\n    ...PasswordPolicyState,\n  };\n  const alphaNumericPolicy = AlphaNumericCheck();\n  const lengthPolicy =\n    rules.passwordPolicy !== \"none\"\n      ? PasswordLengthWise(rules?.password_complexity_options?.min_length)\n      : null;\n  const specialCharacterPolicy = SpecialCharacterPolicy();\n  const identicalLessThan2Characters = IdenticalCharacters();\n\n  switch (\"fair\") {\n    case \"excellent\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (identicalLessThan2Characters.check(value)) {\n        copyObj.No_more_than_2_identical_characters_in_a_row = true;\n      } else {\n        setIsValid(false);\n        copyObj.No_more_than_2_identical_characters_in_a_row = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"good\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (specialCharacterPolicy.check(value)) {\n        copyObj.Special_characters = true;\n      } else {\n        setIsValid(false);\n        copyObj.Special_characters = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"fair\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      if (alphaNumericPolicy.check(value)) {\n        copyObj.Lower_case_Upper_Case_Numbers = true;\n      } else {\n        setIsValid(false);\n        copyObj.Lower_case_Upper_Case_Numbers = false;\n      }\n      break;\n    case \"low\":\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      if (lengthPolicy.check(value)) {\n        copyObj.Length_Check = true;\n      } else {\n        setIsValid(false);\n        copyObj.Length_Check = false;\n      }\n      break;\n    case null:\n      setIsValid(true);\n      if (value !== \"\") {\n        copyObj.Non_empty_Password_Required = true;\n      } else {\n        setIsValid(false);\n        copyObj.Non_empty_Password_Required = false;\n      }\n      break;\n    default:\n      break;\n  }\n  setPasswordPolicyState(copyObj);\n};\n","import React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nimport { CommonDataContext } from \"../providers/CommonDataContext\";\nimport { validatePassword } from \"../validator/PasswordValidator\";\n\nexport default function SignupContainer(props) {\n    const { SignupWithPassword, loginWithPassword } =\n        useContext(AccountContext);\n    const { connections } = useContext(CommonDataContext);\n\n    const [isValid, setIsValid] = useState(false);\n    const [passwordRules, setPasswordRules] = useState(null);\n    const [SignupForm, setSignupForm] = useState({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [PasswordPolicyState, setPasswordPolicyState] = useState({\n        No_more_than_2_identical_characters_in_a_row: false,\n        Special_characters: false,\n        Lower_case_Upper_Case_Numbers: false,\n        Length_Check: false,\n        Non_empty_Password_Required: false,\n    });\n    const [SignupError, setSignupError] = useState({\n        email: \"\",\n        isEmailError: \"\",\n        databaseError: \"\",\n        errorCode: \"\",\n    });\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (\n            SignupForm.email !== \"\" &&\n            SignupForm.password !== \"\" &&\n            SignupForm.confirmPassword !== \"\" &&\n            SignupForm.password === SignupForm.confirmPassword\n        ) {\n            try {\n                const res = await SignupWithPassword(\n                    SignupForm.email,\n                    SignupForm.password\n                );\n                if (res.email) {\n                    await loginWithPassword(\n                        SignupForm.email,\n                        SignupForm.password\n                    );\n                }\n            } catch (e) {\n                setSignupError({\n                    ...SignupError,\n                    databaseError: e.description,\n                    errorCode: e.code,\n                });\n            }\n        } else {\n        }\n    };\n\n    const onClick = (e) => {\n        setPasswordRules(connections[0]);\n    };\n    const onChange = (e) => {\n        if (e.target.name === \"password\" && passwordRules) {\n            validatePassword(\n                passwordRules,\n                e.target.value,\n                PasswordPolicyState,\n                setPasswordPolicyState,\n                setIsValid\n            );\n        }\n        setSignupForm({\n            ...SignupForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const child = React.Children.only(props.children);\n    return React.cloneElement(child, {\n        onSubmit,\n        SignupForm,\n        onChange,\n        onClick,\n        passwordRules,\n        PasswordPolicyState,\n        isValid,\n        SignupError,\n    });\n}\n","function Rules({ count }) {\n  const Rules = {\n    No_more_than_2_identical_characters_in_a_row:\n      \"No more than 2 identical characters in a row\",\n    Special_characters: \"Special characters (!@#$%^&*)\",\n    Lower_case_Upper_Case_Numbers:\n      \"Lower case (a-z), upper case (A-Z) and numbers (0-9)\",\n    Length_Check: `Must have ${count} characters in length`,\n    Non_empty_Password_Required: \"Non-empty Password Required\",\n  };\n  return Rules;\n}\n\nexport default Rules;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 22.7812C17.5228 22.7812 22 18.3041 22 12.7812C22 7.2584 17.5228 2.78125 12 2.78125C6.47715 2.78125 2 7.2584 2 12.7812C2 18.3041 6.47715 22.7812 12 22.7812ZM17.7241 9.47091L10.3333 17.2312L6.27586 12.9709L7.72414 11.5916L10.3333 14.3312L16.2759 8.09159L17.7241 9.47091Z\",\n  fill: \"#0CA77D\"\n});\n\nfunction SvgTickIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 25,\n    viewBox: \"0 0 24 25\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTickIcon);\nexport default __webpack_public_path__ + \"static/media/tickIcon.cd7525e4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { MdLockOutline } from \"react-icons/md\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport Rules from \"../../utils/Rules\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { TiTick } from \"react-icons/ti\";\nimport { ReactComponent as TickIcon } from \"../../svg/tickIcon.svg\";\nimport translate from \"../../localization/translate\";\n\nconst Signup = (props) => {\n    const {\n        onSubmit,\n        SignupForm,\n        onChange,\n        passwordRules,\n        PasswordPolicyState,\n        onClick,\n        isValid,\n        SignupError,\n    } = props;\n    const [showPassword, setShowPassword] = useState(false);\n    const [displayRules, setDisplayRules] = useState(false);\n    const ruleMap =\n        passwordRules &&\n        Rules({\n            count: passwordRules?.password_complexity_options?.min_length,\n        });\n\n    const displayablerule = [];\n    const getKeys = [];\n    for (const key of Object.keys(PasswordPolicyState)) {\n        if (\n            key == \"Non_empty_Password_Required\" ||\n            key == \"Lower_case_Upper_Case_Numbers\" ||\n            key == \"Length_Check\"\n        ) {\n            getKeys.push(key);\n            displayablerule.push(ruleMap[key]);\n        }\n    }\n    //   } else if (passwordRules?.passwordPolicy === \"low\") {\n    //     for (const key of Object.keys(PasswordPolicyState)) {\n    //       if (\n    //         key !== \"No_more_than_2_identical_characters_in_a_row\" ||\n    //         key !== \"Special_characters\" ||\n    //         key !== \"Lower_case_Upper_Case_Numbers\"\n    //       ) {\n    //         getKeys.push(key);\n    //         displayablerule.push(ruleMap[key]);\n    //       }\n    //     }\n    //   } else if (passwordRules?.passwordPolicy === null) {\n    //     for (const key of Object.keys(PasswordPolicyState)) {\n    //       if (key === \"Non_empty_Password_Required\") {\n    //         getKeys.push(key);\n    //         displayablerule.push(ruleMap[key]);\n    //       }\n    //     }\n    //   }\n    return (\n        <div className=\"formWrapper\">\n            <form className=\"InputWrapper\">\n                <>\n                    {SignupForm.email !== \"\" ? (\n                        <div className=\"InputLabel\">\n                            {translate(\"emailAddress\")}\n                        </div>\n                    ) : null}\n                    <div\n                        className=\"InputAndLogoSignup\"\n                        // style={{\n                        //   border:\n                        //     LoginError.isEmailError === true\n                        //       ? \"2px solid red\"\n                        //       : LoginError.isEmailError === false\n                        //       ? \"2px solid green\"\n                        //       : \"\",\n                        // }}\n                    >\n                        <AiOutlineMail\n                            style={{\n                                height: \"2rem\",\n                                width: \"2rem\",\n                                marginTop: \"0.5rem\",\n                                color: \"rgb(175, 174, 174)\",\n                            }}\n                        />\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            value={SignupForm.email}\n                            placeholder=\"Email\"\n                            className=\"Input\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div>\n                        {SignupForm.password !== \"\" ? (\n                            <div\n                                className=\"InputLabelPass\"\n                                style={{\n                                    color: isValid\n                                        ? \"#0CA77D\"\n                                        : \"rgb(175, 174, 174)\",\n                                }}\n                            >\n                                {translate(\"password\")}\n                            </div>\n                        ) : null}\n                        <div\n                            className=\"InputAndLogoSignup\"\n                            // style={{\n                            //   border:\n                            //     LoginError.isEmailError === true\n                            //       ? \"2px solid red\"\n                            //       : LoginError.isEmailError === false\n                            //       ? \"2px solid green\"\n                            //       : \"\",\n                            // }}\n                            style={{\n                                border: `1px solid ${\n                                    isValid ? \"#0CA77D\" : \"RGB(212, 213, 219)\"\n                                }`,\n                            }}\n                        >\n                            <MdLockOutline\n                                style={{\n                                    height: \"2rem\",\n                                    width: \"2rem\",\n                                    marginTop: \"0.5rem\",\n                                    color: \"rgb(175, 174, 174)\",\n                                }}\n                            />\n                            <input\n                                type={showPassword ? \"text\" : \"password\"}\n                                id=\"password\"\n                                name=\"password\"\n                                value={SignupForm.password}\n                                placeholder=\"Password\"\n                                className=\"Input\"\n                                onChange={onChange}\n                                onFocus={() => {\n                                    onClick();\n                                    setDisplayRules(true);\n                                }}\n                                onBlur={() => setDisplayRules(false)}\n                            />\n                            <AiFillEye\n                                style={{\n                                    height: \"2rem\",\n                                    width: \"2rem\",\n                                    marginTop: \"0.5rem\",\n                                    color: \"rgb(175, 174, 174)\",\n                                    cursor: \"pointer\",\n                                }}\n                                onClick={() => {\n                                    showPassword\n                                        ? setShowPassword(false)\n                                        : setShowPassword(true);\n                                }}\n                            />\n                            {isValid ? (\n                                <TickIcon\n                                    style={{\n                                        height: \"2rem\",\n                                        width: \"2rem\",\n                                        marginTop: \"0.5rem\",\n                                    }}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                    <div>\n                        {displayRules ? (\n                            <>\n                                <div className=\"Password-rules\">\n                                    {displayablerule.map((item, index) => {\n                                        return (\n                                            <div className=\"Rule\">\n                                                {\" \"}\n                                                <div className=\"checkbox\">\n                                                    {PasswordPolicyState[\n                                                        getKeys[index]\n                                                    ] ? (\n                                                        <TiTick className=\"tick\" />\n                                                    ) : (\n                                                        <MdOutlineCancel className=\"cancel\" />\n                                                    )}\n                                                </div>\n                                                {item}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n                    <div>\n                        {SignupForm.confirmPassword !== \"\" ? (\n                            <div\n                                className=\"InputLabelCPass\"\n                                style={{\n                                    color:\n                                        SignupForm.password ===\n                                            SignupForm.confirmPassword &&\n                                        SignupForm.confirmPassword !== \"\"\n                                            ? \"#0CA77D\"\n                                            : \"rgb(175, 174, 174)\",\n                                }}\n                            >\n                                {translate(\"confirm_password\")}\n                            </div>\n                        ) : null}\n                        <div\n                            className=\"InputAndLogoSignup\"\n                            // style={{\n                            //   border:\n                            //     LoginError.isEmailError === true\n                            //       ? \"2px solid red\"\n                            //       : LoginError.isEmailError === false\n                            //       ? \"2px solid green\"\n                            //       : \"\",\n                            // }}\n                            style={{\n                                border: `1px solid ${\n                                    SignupForm.password ===\n                                        SignupForm.confirmPassword &&\n                                    SignupForm.confirmPassword !== \"\"\n                                        ? \"#0CA77D\"\n                                        : \"RGB(212, 213, 219)\"\n                                }`,\n                            }}\n                        >\n                            <MdLockOutline\n                                style={{\n                                    height: \"2rem\",\n                                    width: \"2rem\",\n                                    marginTop: \"0.5rem\",\n                                    color: \"rgb(175, 174, 174)\",\n                                }}\n                            />\n                            <input\n                                type={showPassword ? \"text\" : \"password\"}\n                                id=\"confirmPassword\"\n                                name=\"confirmPassword\"\n                                value={SignupForm.confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                className=\"Input\"\n                                onChange={onChange}\n                                onBlur={() => setDisplayRules(false)}\n                            />\n                            <AiFillEye\n                                style={{\n                                    height: \"2rem\",\n                                    width: \"2rem\",\n                                    marginTop: \"0.7rem\",\n                                    color: \"rgb(175, 174, 174)\",\n                                    cursor: \"pointer\",\n                                }}\n                                onClick={() => {\n                                    showPassword\n                                        ? setShowPassword(false)\n                                        : setShowPassword(true);\n                                }}\n                            />\n                            {SignupForm.password ===\n                                SignupForm.confirmPassword &&\n                            SignupForm.confirmPassword !== \"\" ? (\n                                <TickIcon\n                                    style={{\n                                        height: \"2rem\",\n                                        width: \"2rem\",\n                                        marginTop: \"0.5rem\",\n                                    }}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                    {SignupError.errorCode && (\n                        <div className=\"Error\">\n                            {translate(SignupError.errorCode)}\n                        </div>\n                    )}\n                    <div className=\"PolicyLink\">\n                        <p>\n                            {\" \"}\n                            By clicking{\" \"}\n                            <span style={{ fontWeight: \"bold\" }}>\n                                Create my account\n                            </span>\n                            , you accept\n                            <span style={{ color: \"rgb(66, 88, 255)\" }}>\n                                McAfee’s License <br />\n                                Agreement\n                            </span>{\" \"}\n                            and\n                            <span style={{ color: \"rgb(66, 88, 255)\" }}>\n                                {\" \"}\n                                Privacy Notice\n                            </span>\n                        </p>\n                    </div>\n                    <button\n                        className={\n                            SignupForm.email !== \"\" &&\n                            SignupForm.password !== \"\" &&\n                            SignupForm.confirmPassword !== \"\"\n                                ? \"SubmitButtonActive\"\n                                : \"SubmitButton\"\n                        }\n                        onClick={onSubmit}\n                    >\n                        <div>Create My Account</div>\n                    </button>\n                </>\n            </form>\n        </div>\n    );\n};\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../providers/AppContext\";\nimport Signup from \"./Signup\";\nimport \"./style.css\";\nimport translate from \"../../localization/translate\";\n\nconst SignupUI = (props) => {\n  const {\n    onSubmit,\n    SignupForm,\n    onChange,\n    onClick,\n    passwordRules,\n    PasswordPolicyState,\n    isValid,\n    SignupError,\n  } = props;\n  const { setWhichPage } = useContext(AppContext);\n  return (\n    <>\n      <div className=\"SignupWrapper\">\n        <div className=\"leftContainer\">\n          <img\n            alt=\"McAfeeLogo\"\n            className=\"Logo\"\n            src=\"https://cdn.jsdelivr.net/gh/atulrana007/McAfee-React-Appp/public/images/McAfee-Logo.png\"\n          />\n          <div className=\"Intro\">Create your McAfee account</div>\n          <div className=\"IntroSubHeading\">\n            <div className=\"Points\">\n              {translate(\n                \"Enter_your_email_address_set_password_and_well_get_your_account_created\"\n              )}\n            </div>\n          </div>\n\n          <div className=\"BottomHeadingSignUp\">\n            {translate(\"Already have a account ?\")}\n            <p\n              className=\"page-link\"\n              onClick={() => {\n                setWhichPage(\"login-page\");\n              }}\n            >\n              Login\n            </p>\n          </div>\n        </div>\n        <div className=\"RightContainer\">\n          <Signup\n            onChange={onChange}\n            onSubmit={onSubmit}\n            SignupForm={SignupForm}\n            onClick={onClick}\n            passwordRules={{ ...passwordRules, passwordPolicy: \"fair\" }}\n            PasswordPolicyState={PasswordPolicyState}\n            isValid={isValid}\n            SignupError={SignupError}\n          ></Signup>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignupUI;\n","import React from \"react\";\nimport SignupContainer from \"../../containers/signupContainer\";\nimport SignupUI from \"./SignupUI\";\n\nconst Signup = (props) => {\n  return (\n    <SignupContainer {...props}>\n      <SignupUI />\n    </SignupContainer>\n  );\n};\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"./providers/AppContext\";\nimport Login from \"./components/login/index\";\nimport Signup from \"./components/signup/index\";\n\nfunction Main() {\n    const { whichPage, setWhichPage } = useContext(AppContext);\n    return (\n        <div>\n            {whichPage === \"signup-page\" ? (\n                <Signup setWhichPage={setWhichPage} />\n            ) : (\n                <Login setWhichPage={setWhichPage} />\n            )}\n        </div>\n    );\n}\n\nexport default Main;\n","export const LOCALES = {\n    ENGLISH: \"en-us\",\n    GERMAN: \"de-de\",\n    FRENCH: \"fr-ca\",\n};\n","import { LOCALES } from \"../constants\";\n\nconst en = {\n    [LOCALES.ENGLISH]: {\n        Welcome_back_to: \"Welcome back to\",\n        emailAddress: \"Email Address\",\n        password: \"Password\",\n        signIn: \"Sign in\",\n        choose_your_signIn_method_continue:\n            \"Choose your sign in method to continue\",\n        Enter_your_email_address_so_we_can_find_your_account:\n            \"Enter your email address so we can find your account.\",\n        or: \"or\",\n        signIn_with_password: \"Sign in with password\",\n        one_time_passcode: \"one-time passcode\",\n        Sign_in_with_a_onetime_passcode: \"Sign in with one-time passcode\",\n        continue: \"continue\",\n        access_denied: \"Wrong email or password.\",\n        too_many_attempts:\n            \" Your account has been blocked after multiple consecutive login attempts. We’ve sent you an email with instructions on how to unblock it.\",\n        Welcome_to_dashboard: \"Welcome to Dashboard\",\n        invalid_request:\n            \" Invalid request body. All and only of client_id, credential_type, username, otp, realm are required.\",\n        unauthorized_client: \"Cross origin login not allowed.\",\n        unsupported_credential_type: \" Unknown credential type parameter.\",\n        blocked_user: \"blocked user\",\n        password_leaked:\n            \"This login attempt has been blocked because the password you're using was previously disclosed through a data breach \",\n        or_Signin_with: \"or Sign in with:\",\n        Do_not_have_an_account: \"Don't have an Account ?\",\n        invalid_user_password: \"Wrong credentials.\",\n        invalid_captcha:\n            \"Solve the challenge question to verify you are not a robot.\",\n        invalid_recaptcha: \"Select the checkbox to verify you are not a robot.\",\n        Enter_your_email_address_set_password_and_well_get_your_account_created:\n            \"Enter your email address, set a password and we'll get your account created.\",\n        Already_have_a_account: \"Already have a account ?\",\n        confirm_password: \"Confirm Password\",\n        Request_one_time_passcode: \"Request one-time passcode\",\n        ACT0104: \"Invalid signon/password and max attempts exceeded\",\n        ACT0105: \"Valid signon/password but max attempts exceeded\",\n        ResendCode: \"Resend Code\",\n    },\n};\nexport default en;\n","import { LOCALES } from \"../constants\";\n\nconst fr = {\n    [LOCALES.FRENCH]: {\n        Welcome_back_to: \"Bon retour à\",\n        emailAddress: \"Adresse e-mail\",\n        password: \"le mot de passe\",\n        signIn: \"s'identifier\",\n        choose_your_signIn_method_continue:\n            \"Choisissez votre méthode de connexion pour continuer\",\n        Enter_your_email_address_so_we_can_find_your_account:\n            \"Entrez votre adresse e-mail afin que nous puissions trouver votre compte.\",\n        Sign_in_with_a_onetime_passcode:\n            \"Connectez-vous avec un code d'accès à usage unique\",\n        or: \"ou\",\n        signIn_with_password: \"se connecter avec mot de passe\",\n        one_time_passcode: \"code d'accès à usage unique\",\n        continue: \"Continuez\",\n        access_denied: \"Mauvaise adresse de messagerie ou mot de passe.\",\n        too_many_attempts:\n            \"Votre compte a été bloqué après plusieurs tentatives de connexion consécutives. Nous vous avons envoyé un e-mail avec des instructions sur la façon de le débloquer\",\n        Welcome_to_dashboard: \"bienvenue au tableau de bord\",\n        invalid_request:\n            \"Corps de requête non valide. Tous et uniquement client_id, type d'identification, nom d'utilisateur, otp, domaine sont requis\",\n        unauthorized_client: \"Connexion d'origine croisée non autorisée.\",\n        unsupported_credential_typ: \"Paramètre de type d'identifiant inconnu.\",\n        blocked_user: \"utilisateur bloqué\",\n        password_leaked:\n            \"Cette tentative de connexion a été bloquée car le mot de passe que vous utilisez a déjà été divulgué suite à une violation de données\",\n        or_Signin_with: \"Ou connectez-vous avec :\",\n        Do_not_have_an_account: \"Vous n'avez pas de compte ?\",\n        invalid_user_password: \"Mauvais identifiants.\",\n        invalid_captcha:\n            \"RÃ©solvez la question du dÃ©fi pour vÃ©rifier que vous n'Ãªtes pas un robot.\",\n        invalid_recaptcha:\n            \"Cochez la case pour vÃ©rifier que vous n'Ãªtes pas un robot.\",\n        Enter_your_email_address_set_password_and_well_get_your_account_created:\n            \"Entrez votre adresse e-mail, définissez un mot de passe et nous créerons votre compte.\",\n        Already_have_a_account: \"Vous avez déjà un compte ?\",\n        confirm_password: \"Confirmez le mot de passe\",\n        Request_one_time_passcode: \"Demander un mot de passe à usage unique\",\n        ACT0104:\n            \"Code d'accès/mot de passe non valide et nombre maximal de tentatives dépassé\",\n        ACT0105:\n            \"Code d'accès/mot de passe valide et tentatives maximales dépassées\",\n        ResendCode: \"Renvoyer le code\",\n    },\n};\nexport default fr;\n","import en from \"./en-US\";\nimport fr from \"./fr-CA\";\n\nconst messages = {\n    ...en,\n    ...fr,\n};\nexport default messages;\n","import React, { Fragment } from \"react\";\nimport { IntlProvider } from \"react-intl\";\n\nimport messages from \"./messages\";\n\nconst LanguageProvider = ({ children, locale }) => (\n    <IntlProvider\n        textComponent={Fragment}\n        locale={locale}\n        messages={messages[locale]}\n    >\n        {children}\n    </IntlProvider>\n);\nexport default LanguageProvider;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useRef } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\n\nimport Authorize from \"./components/Authorize\";\n\nimport Main from \"./Main\";\n\nimport { AccountProvider } from \"./providers/AccountContext\";\nimport LanguageProvider from \"./localization/languageProvider\";\nimport { LOCALES } from \"./localization/constants\";\nimport { CommonDataProvider } from \"./providers/CommonDataContext\";\n\nimport \"./app.css\";\nimport { AppProvider } from \"./providers/AppContext\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst App = ({ pageConfig }) => {\n    const parsedHash = new URLSearchParams(window.location.hash.substr(1));\n\n    let query = useQuery();\n    let locale = useRef(\"\");\n    let lang;\n    let culture = query.get(\"culture\") ?? parsedHash.get(\"culture\");\n\n    if (culture === null) {\n        if (localStorage.getItem(\"lang\") === null) {\n            lang = \"en-us\";\n        } else {\n            lang = localStorage.getItem(\"lang\");\n        }\n    } else {\n        lang = culture;\n        localStorage.setItem(\"lang\", lang);\n    }\n\n    if (lang === \"en-us\") {\n        locale.current = LOCALES.ENGLISH;\n    } else if (lang === \"fr-ca\") {\n        locale.current = LOCALES.FRENCH;\n    } else {\n        locale.current = \"en-us\";\n    }\n\n    return (\n        <CommonDataProvider config={pageConfig}>\n            <AppProvider>\n                <LanguageProvider locale={locale.current}>\n                    <AccountProvider\n                        config={pageConfig}\n                        locale={locale.current}\n                    >\n                        <div id=\"app\" className=\"d-flex flex-column h-100\">\n                            <div className=\"container flex-grow-1\">\n                                <div className=\"mt-5\">\n                                    <Switch>\n                                        <Route\n                                            path=\"/login\"\n                                            exact\n                                            component={() => <Main />}\n                                        />\n                                        <Route exact path=\"/authorize\">\n                                            <Authorize config={pageConfig} />\n                                        </Route>\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </AccountProvider>\n                </LanguageProvider>\n            </AppProvider>\n        </CommonDataProvider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nimport \"./index.css\";\n\n// window.LoginWidget = class LoginWidget {\n//     init(opts) {\n//         const pageConfig = opts.pageConfig;\n//         if (!pageConfig) {\n//             console.log(\"hello\");\n//             throw new Error(\"pageConfig must be provided in opts\");\n//         }\n//     }\n// };\n\nimport { BrowserRouter } from \"react-router-dom\";\n\n// window.LoginWidget = class LoginWidget {\n//   init(opts) {\n//     const pageConfig = opts.pageConfig;\n//     if (!pageConfig) {\n//       throw new Error(\"pageConfig must be provided in opts\");\n//     }\n\n//     ReactDOM.render(\n//       <BrowserRouter>\n//         <App pageConfig={pageConfig} />\n//       </BrowserRouter>,\n//       document.getElementById(\"root\")\n//     );\n//   }\n// };\nReactDOM.render(\n    <BrowserRouter>\n        <App pageConfig={{}} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//     <BrowserRouter>\n//         <App />\n//     </BrowserRouter>,\n//     document.getElementById(\"root\")\n// );\n"],"sourceRoot":""}